$breakpoints: (
	// List as unitless pixels
	base: 440,  // 600-440= 160
	small: 600,  // 760-600= 160
	medium: 760,  // 960-760= 200
	large: 960,  // 1200-960= 240
	x-large: 1200, // 1520-1200 = 320
	xx-large: 1520  // 1520-1200 = 320
);

// Helpers
@function bp($bp) {
  @return map-get($breakpoints, $bp);
}

// Breakpoint mixins
@mixin breakpoint-up($bp) {
  @media (min-width: #{ em( bp($bp) ) }) {
    @content;
  }
}

@mixin breakpoint-down($bp) {
  @media (max-width: #{ em( (bp($bp) - 1) ) }) {
    @content;
  }
}

// Reusable main breakpoints
@mixin layout-columns($dir: up) {
  @if $dir == up {
    @include breakpoint-up(large) {
      @content;
    }
  } @else {
    @include breakpoint-down(large) {
      @content;
    }
  }
}

@mixin jumper-switch($dir: up) {
  @if $dir == up {
    @include breakpoint-up(x-large) {
      @content;
    }
  } @else {
    @include breakpoint-down(x-large) {
      @content;
    }
  }
}

// For responsive typography
// Declare a minimum and maximum viewport size for fluidity to happen within
$min-vw: math.div(bp('base'), 16);
$max-vw: math.div(bp('x-large'), 16);


// Maximum widths
$max-widths: (
  base: 1000,
  text: 48rem,
  container: 64rem
);

$max-width: #{em(map-get($max-widths, base))};
$max-width__text: map-get($max-widths, text);
$max-width__container: map-get($max-widths, container);